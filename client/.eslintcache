[{"D:\\PTPMPT.20211-06\\client\\src\\index.js":"1","D:\\PTPMPT.20211-06\\client\\src\\App.js":"2","D:\\PTPMPT.20211-06\\client\\src\\reportWebVitals.js":"3","D:\\PTPMPT.20211-06\\client\\src\\Navigation.js":"4","D:\\PTPMPT.20211-06\\client\\src\\components\\SignUp.js":"5","D:\\PTPMPT.20211-06\\client\\src\\components\\Login.js":"6","D:\\PTPMPT.20211-06\\client\\src\\components\\Roomlist\\room-list.js":"7","D:\\PTPMPT.20211-06\\client\\src\\components\\Home\\Home.js":"8","D:\\PTPMPT.20211-06\\client\\src\\axios.js":"9","D:\\PTPMPT.20211-06\\client\\src\\commons\\socket.js":"10","D:\\PTPMPT.20211-06\\client\\src\\context\\AuthContext.js":"11","D:\\PTPMPT.20211-06\\client\\src\\Layouts\\header.js":"12","D:\\PTPMPT.20211-06\\client\\src\\features\\userSlice.js":"13","D:\\PTPMPT.20211-06\\client\\src\\reducers\\store.js":"14"},{"size":640,"mtime":1640252921838,"results":"15","hashOfConfig":"16"},{"size":176,"mtime":1638200211799,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1638200212256,"results":"18","hashOfConfig":"16"},{"size":1427,"mtime":1640257923514,"results":"19","hashOfConfig":"16"},{"size":3266,"mtime":1640258019395,"results":"20","hashOfConfig":"16"},{"size":2750,"mtime":1640258007787,"results":"21","hashOfConfig":"16"},{"size":12423,"mtime":1640255519168,"results":"22","hashOfConfig":"16"},{"size":9238,"mtime":1640621276702,"results":"23","hashOfConfig":"16"},{"size":654,"mtime":1640062137387,"results":"24","hashOfConfig":"16"},{"size":521,"mtime":1638200319174,"results":"25","hashOfConfig":"16"},{"size":1796,"mtime":1638200319177,"results":"26","hashOfConfig":"16"},{"size":2741,"mtime":1640616202442,"results":"27","hashOfConfig":"16"},{"size":515,"mtime":1640071694961,"results":"28","hashOfConfig":"16"},{"size":188,"mtime":1640062027036,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1iohc3s",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"D:\\PTPMPT.20211-06\\client\\src\\index.js",[],["64","65"],"D:\\PTPMPT.20211-06\\client\\src\\App.js",["66"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport Navigation from './Navigation'\r\n\r\nfunction App() {\r\n  return (\r\n    <Navigation />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\PTPMPT.20211-06\\client\\src\\reportWebVitals.js",[],"D:\\PTPMPT.20211-06\\client\\src\\Navigation.js",["67","68","69","70","71","72","73"],"import { Switch } from \"react-router\";\r\nimport selecUser from './features/userSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport React, {useState, useEffect, Suspense } from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route, useHistory, useParams\r\n} from \"react-router-dom\";\r\nimport Home from './components/Home/Home';\r\nimport Login from './components/Login';\r\nimport SignUp from './components/SignUp';\r\nimport Roomlist from './components/Roomlist/room-list';\r\n\r\n\r\nexport default function Navigation() {\r\n    const userInfo = localStorage.getItem('user');\r\n    const [user, setUser] = useState(JSON.parse(userInfo));\r\n\r\n    const loginSuccess = (user) => {\r\n       localStorage.setItem('user',JSON.stringify(user));\r\n        setUser(user);\r\n    }\r\n\r\n    \r\n    return(\r\n        <Router>\r\n            <Switch>             \r\n                <Route exact path='/login' >\r\n                    <Login setToken={loginSuccess} authorized={user}  />\r\n                </Route>\r\n                <Route exact path='/signup' >\r\n                    <SignUp authorized={user}/>\r\n                </Route>\r\n                <Route exact path='/'>\r\n                    <Home authorized={user}/>\r\n                </Route>\r\n                <Route exact path='/roomlist' >\r\n                    <Roomlist authorized={user} />\r\n                </Route>\r\n            </Switch>\r\n            \r\n        </Router>\r\n    );\r\n}","D:\\PTPMPT.20211-06\\client\\src\\components\\SignUp.js",["74","75","76","77","78"],"import React, { useState, useEffect} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { loginUser, signupUser } from '../axios';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function SignUp({ authorized}) {\r\n    //document.body.style.backgroundImage = \"url(/images/hinhnen1.png)\";\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [rePassword, setRePassword] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n\r\n    if (authorized) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        if(email == null || password == null || rePassword == null) {\r\n            alert(\"Không được để trống !!\");\r\n        }\r\n        if(password != rePassword){\r\n            alert(\"Mật khẩu không trùng khớp !!\");\r\n        }\r\n        let Name = email.slice(0, email.indexOf(\"@\"));\r\n        let body = {\r\n            Email: email,\r\n            Password: password,\r\n            Name\r\n        }\r\n        console.log(body);\r\n\r\n        signupUser(body).then(res => {\r\n            console.log(res);\r\n            if( res.status == 200){\r\n                alert(\"Đăng ký thành công !!\");\r\n                history.push('/')\r\n            }else if (res.status == 410) {\r\n                alert(\"Tài khoản đã tồn tại !!\");\r\n                setEmail('');\r\n                setPassword('');\r\n            } else {\r\n                alert(\"Đăng ký không thành công !!\");\r\n                setEmail('');\r\n                setPassword('');\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const changeEmail = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const changePassword = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const changeRePassword = (e) => {\r\n        setRePassword(e.target.value)\r\n    }\r\n\r\n    return (\r\n            <div class=\"content-w3ls\">\r\n                <form class=\"login-form\">\r\n                    <h2>Sign Up</h2>\r\n\r\n                    <div class=\"form-control w3layouts\">\r\n                        <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"User name or email\" title=\"Please enter a valid email\" required=\"\" value={email} onChange={(e)=> {changeEmail(e)}} />\r\n                    </div>\r\n\r\n                    <div class=\"form-control agileinfo\">\r\n                        <input type=\"password\" class=\"lock\" name=\"password\" placeholder=\"Password\" id=\"password1\" required=\"\" value={password} onChange={(e)=> {changePassword(e)}} />\r\n                    </div>\r\n\r\n\r\n                    <div class=\"form-control agileinfo\">\r\n                        <input onChange={(e) => {changeRePassword(e)}} type=\"password\" class=\"lock\" name=\"password\" placeholder=\"Re-enter Password\" id=\"password1\" required=\"\" value={rePassword} />\r\n                    </div>\r\n\r\n                    <input type=\"button\" class=\"login\" value=\"Sign Up\" onClick={handleSubmit} />\r\n\r\n                    <div class=\"form-control agileinfo\" style={{ marginLeft: \"-40px\" }}>\r\n                        <p class=\"p-bottom-w3ls\">Already have an account? <a class href=\"\\login\" style={{ color: \"blue\" }}>Login ?</a></p>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        \r\n    )\r\n}","D:\\PTPMPT.20211-06\\client\\src\\components\\Login.js",["79","80","81","82","83"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {login} from \"../features/userSlice\"\r\nimport {loginUser} from  '../axios'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default function Login({ setToken, authorized}) {\r\n    //document.body.style.backgroundImage = \"url(/images/hinhnen1.png)\";\r\n    const dispatch = useDispatch();\r\n    const userReducer = useSelector(state => state.userReducer)\r\n    const [email, setEmail] = useState('')\r\n    const [pass, setPass] = useState('')\r\n    const [checkLogin, setCheck] = useState(false);\r\n    const history = useHistory();\r\n\r\n\r\n    if (authorized) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n\r\n    const loginBtn = async (e) => {\r\n        try {\r\n            let body = {\r\n                Email: email,\r\n                Password: pass\r\n            }\r\n            const result = await loginUser(body)\r\n\r\n            if (result.data.data.token) {\r\n                const userInfo = result.data.data.playerInfo;\r\n                userInfo.accessToken = result.data.data.token;\r\n                setToken(userInfo);\r\n                e.preventDefault();\r\n\r\n            dispatch(login(userInfo))\r\n                alert(\"Đăng nhập thành công !!\")\r\n                history.push(\"/\")\r\n            }\r\n           \r\n        }catch (err) {\r\n            console.log('error',err);\r\n            alert(\"Sai tài khoản hoặc mật khẩu\");\r\n        }\r\n    }\r\n\r\n    const changeEmail = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const changePass = (e) => {\r\n        setPass(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div class=\"content-w3ls\" >\r\n            <form class=\"login-form\">\r\n                <h2>LOGIN</h2>\r\n\r\n                <div class=\"form-control w3layouts\">\r\n                    <input value={email} onChange={(e) => changeEmail(e)} type=\"email\" id=\"email\" name=\"email\" placeholder=\"User name or email\" title=\"Please enter a valid email\" required=\"\"/>\r\n                </div>\r\n\r\n                <div class=\"form-control agileinfo\">\r\n                    <input value={pass} onChange={(e) => changePass(e)} type=\"password\" class=\"lock\" name=\"password\" placeholder=\"Password\" id=\"password1\" required=\"\"/>\r\n                </div>\r\n\r\n\r\n                <input type=\"button\" class=\"login\" value=\"login\" onClick={loginBtn}/>\r\n\r\n                <div class =\"form-control agileinfo\">\r\n                <p class =\"p-bottom-w3ls\"><a class href=\"#\">Forgot Password?</a></p>\r\n                <p class =\"p-bottom-w3ls1\"><a class href=\"\\signup\"> Register here </a></p>\r\n                </div>\r\n            <h2>Is Good!!</h2>\r\n            </form>\r\n        </div>\r\n    )\r\n}","D:\\PTPMPT.20211-06\\client\\src\\components\\Roomlist\\room-list.js",["84"],"import {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    InputLabel,\r\n    MenuItem,\r\n    Paper,\r\n    Select,\r\n    TextField,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport { AddBoxRounded, MeetingRoomRounded } from '@material-ui/icons';\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\nimport socket from '../../commons/socket';\r\nimport { useAuthContext } from '../../context/AuthContext';\r\nimport './roomlist.scss';\r\nimport Header from '../../Layouts/header'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst RoomList = ({ authorized}) => {\r\n    const { register, handleSubmit, control, errors, setError, reset } = useForm({\r\n        defaultValues: {\r\n            password: '',\r\n            time: '45',\r\n            roomId: '',\r\n        },\r\n    });\r\n\r\n    console.log(errors);\r\n\r\n   /* const { authData } = useAuthContext();*/\r\n    const history = useHistory();\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [roomList, setRoomList] = useState([]);\r\n    const [selectedRoomId, setSelectedRoomId] = useState(null);\r\n\r\n    const [openCreateForm, setOpenCreateForm] = useState(false);\r\n    const [openJoinForm, setOpenJoinForm] = useState(false);\r\n    const [openPasswordForm, setOpenPasswordForm] = useState(false);\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                name: 'RoomID',\r\n                selector: 'roomId',\r\n                sortable: true,\r\n            },\r\n            {\r\n                name: 'Password',\r\n                selector: 'password',\r\n            },\r\n            {\r\n                name: 'Host',\r\n                selector: 'hostname',\r\n                sortable: true,\r\n            },\r\n            {\r\n                name: 'Status',\r\n                selector: 'status',\r\n                sortable: true,\r\n            },\r\n            {\r\n                name: 'Slot',\r\n                selector: 'slot',\r\n                sortable: true,\r\n            },\r\n            {\r\n                name: 'Viewer',\r\n                selector: 'viewer',\r\n                sortable: true,\r\n            },\r\n        ],\r\n        [],\r\n    );\r\n\r\n    useEffect(() => {\r\n        socket.emit('roomList');\r\n\r\n        socket.on('getRoomList', (roomList) => {\r\n            setLoading(true);\r\n            let updatedRoomList = [];\r\n            for (let roomId in roomList) {\r\n                updatedRoomList.push({\r\n                    roomId,\r\n                    password: roomList[roomId].config.password ? 'Yes' : 'No',\r\n                    hostname: roomList[roomId].host.username,\r\n                    status: roomList[roomId].board.boardId ? 'Playing' : 'Waiting',\r\n                    slot: roomList[roomId].guest.username ? '2/2' : '1/2',\r\n                    viewer: roomList[roomId].viewers.length,\r\n                });\r\n            }\r\n            console.log('roomlist ma ta ', updatedRoomList);\r\n            setRoomList(updatedRoomList);\r\n            setLoading(false);\r\n        });\r\n\r\n        socket.on('joinRoom', ({ roomId, password }) => {\r\n            history.push(`/room?roomId=${roomId}&password=${password}`);\r\n        });\r\n\r\n        socket.on('joinRoomError', (type) => {\r\n            console.log(type);\r\n\r\n            if (type === 'wrongRoomId') {\r\n                setError('roomId', {\r\n                    type,\r\n                    message: \"Can't find room with this RoomID. Please try again!\",\r\n                });\r\n            } else {\r\n                setError('password', {\r\n                    type,\r\n                    message: 'Wrong password. Please try again!',\r\n                });\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            socket.removeAllListeners();\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    if (!authorized) {\r\n        return < Redirect to=\"/login\" />;\r\n    }\r\n\r\n    const handleOpenCreateForm = () => {\r\n        setOpenCreateForm(true);\r\n    };\r\n\r\n    const handleCloseCreateForm = () => {\r\n        setOpenCreateForm(false);\r\n        reset({\r\n            password: '',\r\n            time: '45',\r\n            roomId: '',\r\n        });\r\n    };\r\n\r\n    const handleSubmitCreateGame = (data) => {\r\n        const config = {\r\n            password: data.password ? data.password : null,\r\n            time: data.time,\r\n        };\r\n        socket.emit('createRoom', {\r\n         /*   cups: authData.userInfo.cups,*/\r\n            config,\r\n        });\r\n        handleCloseCreateForm();\r\n    };\r\n\r\n    const handleOpenJoinForm = () => {\r\n        setOpenJoinForm(true);\r\n    };\r\n\r\n    const handleCloseJoinForm = () => {\r\n        setOpenJoinForm(false);\r\n        reset({\r\n            password: '',\r\n            roomId: '',\r\n        });\r\n    };\r\n\r\n    const handleSubmitJoinGame = (data) => {\r\n        socket.emit('checkRoom', {\r\n            roomId: data.roomId,\r\n            password: data.password ? data.password : null,\r\n        });\r\n    };\r\n\r\n    const handleClosePasswordForm = () => {\r\n        setOpenPasswordForm(false);\r\n        reset({\r\n            password: '',\r\n        });\r\n    };\r\n\r\n    const handleSubmitPasswordGame = (data) => {\r\n        socket.emit('checkRoom', {\r\n            roomId: selectedRoomId,\r\n            password: data.password ? data.password : null,\r\n        });\r\n    };\r\n\r\n    const handleRowClick = (row) => {\r\n        console.log(row);\r\n\r\n        if (row.password === 'Yes') {\r\n            setSelectedRoomId(row.roomId);\r\n            setOpenPasswordForm(true);\r\n        } else {\r\n            history.push(`/room?roomId=${row.roomId}&password=${null}`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"room-list\">\r\n            <Header />\r\n            <Paper className=\"container\">\r\n                <div className=\"header\">\r\n                    <Typography color=\"primary\" variant=\"h2\" className=\"title\">\r\n                        Room\r\n                    </Typography>\r\n                    <div className=\"btn-group\">\r\n                        <Button\r\n                            onClick={handleOpenCreateForm}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            startIcon={<AddBoxRounded />}\r\n                            className=\"create-btn\"\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                        <Button\r\n                            onClick={handleOpenJoinForm}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            startIcon={<MeetingRoomRounded />}\r\n                            className=\"join-btn\"\r\n                        >\r\n                            Join\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"content\">\r\n                    <DataTable\r\n                        columns={columns}\r\n                        data={roomList}\r\n                        progressPending={loading}\r\n                        onRowClicked={handleRowClick}\r\n                        pointerOnHover\r\n                        highlightOnHover\r\n                        noDataComponent=\"There are rooms to display\"\r\n                    />\r\n                </div>\r\n            </Paper>\r\n\r\n            <Dialog\r\n                fullWidth={true}\r\n                open={openCreateForm}\r\n                onClose={handleCloseCreateForm}\r\n                aria-labelledby=\"create-game-form\"\r\n            >\r\n                <DialogTitle id=\"create-game-form\">Create Game</DialogTitle>\r\n                <DialogContent>\r\n                    <InputLabel>Password (Optional)</InputLabel>\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        name=\"password\"\r\n                        inputRef={register}\r\n                        autoComplete=\"off\"\r\n                        fullWidth\r\n                    />\r\n                    <InputLabel>Time</InputLabel>\r\n                    <Controller\r\n                        control={control}\r\n                        name=\"time\"\r\n                        fullWidth\r\n                        render={({ onChange, onBlur, value }) => (\r\n                            <Select\r\n                                onChange={onChange}\r\n                                onBlur={onBlur}\r\n                                selected={value}\r\n                                defaultValue=\"45\"\r\n                            >\r\n                                <MenuItem value=\"15\">15</MenuItem>\r\n                                <MenuItem value=\"30\">30</MenuItem>\r\n                                <MenuItem value=\"45\">45</MenuItem>\r\n                                <MenuItem value=\"60\">60</MenuItem>\r\n                                <MenuItem value=\"75\">75</MenuItem>\r\n                                <MenuItem value=\"90\">90</MenuItem>\r\n                            </Select>\r\n                        )}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCloseCreateForm} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleSubmit(handleSubmitCreateGame)} color=\"primary\">\r\n                        Create\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                fullWidth={true}\r\n                open={openJoinForm}\r\n                onClose={handleCloseJoinForm}\r\n                aria-labelledby=\"join-game-form\"\r\n            >\r\n                <DialogTitle id=\"join-game-form\">Join Game</DialogTitle>\r\n                <DialogContent>\r\n                    <InputLabel>RoomID</InputLabel>\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        name=\"roomId\"\r\n                        inputRef={register}\r\n                        autoComplete=\"off\"\r\n                        error={!!errors?.roomId}\r\n                        helperText={errors?.roomId?.message}\r\n                        required={true}\r\n                        fullWidth\r\n                    />\r\n                    <InputLabel>Password</InputLabel>\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        name=\"password\"\r\n                        inputRef={register}\r\n                        autoComplete=\"off\"\r\n                        error={!!errors?.password}\r\n                        helperText={errors?.password?.message}\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCloseJoinForm} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleSubmit(handleSubmitJoinGame)} color=\"primary\">\r\n                        Join\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                fullWidth={true}\r\n                open={openPasswordForm}\r\n                onClose={handleClosePasswordForm}\r\n                aria-labelledby=\"password-form\"\r\n            >\r\n                <DialogTitle id=\"password-form\">Password</DialogTitle>\r\n                <DialogContent>\r\n                    <InputLabel>Password</InputLabel>\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        name=\"password\"\r\n                        inputRef={register}\r\n                        autoComplete=\"off\"\r\n                        error={!!errors?.password}\r\n                        helperText={errors?.password?.message}\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClosePasswordForm} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleSubmit(handleSubmitPasswordGame)} color=\"primary\">\r\n                        Join\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RoomList;","D:\\PTPMPT.20211-06\\client\\src\\components\\Home\\Home.js",["85","86","87","88"],"D:\\PTPMPT.20211-06\\client\\src\\axios.js",[],"D:\\PTPMPT.20211-06\\client\\src\\commons\\socket.js",[],"D:\\PTPMPT.20211-06\\client\\src\\context\\AuthContext.js",[],"D:\\PTPMPT.20211-06\\client\\src\\Layouts\\header.js",["89","90","91","92","93","94","95","96"],"D:\\PTPMPT.20211-06\\client\\src\\features\\userSlice.js",[],"D:\\PTPMPT.20211-06\\client\\src\\reducers\\store.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":1,"column":8,"nodeType":"103","messageId":"104","endLine":1,"endColumn":12},{"ruleId":"101","severity":1,"message":"105","line":2,"column":8,"nodeType":"103","messageId":"104","endLine":2,"endColumn":17},{"ruleId":"101","severity":1,"message":"106","line":3,"column":10,"nodeType":"103","messageId":"104","endLine":3,"endColumn":21},{"ruleId":"101","severity":1,"message":"107","line":3,"column":23,"nodeType":"103","messageId":"104","endLine":3,"endColumn":34},{"ruleId":"101","severity":1,"message":"108","line":4,"column":26,"nodeType":"103","messageId":"104","endLine":4,"endColumn":35},{"ruleId":"101","severity":1,"message":"109","line":4,"column":37,"nodeType":"103","messageId":"104","endLine":4,"endColumn":45},{"ruleId":"101","severity":1,"message":"110","line":7,"column":12,"nodeType":"103","messageId":"104","endLine":7,"endColumn":22},{"ruleId":"101","severity":1,"message":"111","line":7,"column":24,"nodeType":"103","messageId":"104","endLine":7,"endColumn":33},{"ruleId":"101","severity":1,"message":"108","line":1,"column":27,"nodeType":"103","messageId":"104","endLine":1,"endColumn":36},{"ruleId":"101","severity":1,"message":"112","line":3,"column":10,"nodeType":"103","messageId":"104","endLine":3,"endColumn":19},{"ruleId":"113","severity":1,"message":"114","line":24,"column":21,"nodeType":"115","messageId":"116","endLine":24,"endColumn":23},{"ruleId":"113","severity":1,"message":"117","line":37,"column":28,"nodeType":"115","messageId":"116","endLine":37,"endColumn":30},{"ruleId":"113","severity":1,"message":"117","line":40,"column":34,"nodeType":"115","messageId":"116","endLine":40,"endColumn":36},{"ruleId":"101","severity":1,"message":"108","line":1,"column":27,"nodeType":"103","messageId":"104","endLine":1,"endColumn":36},{"ruleId":"101","severity":1,"message":"118","line":11,"column":11,"nodeType":"103","messageId":"104","endLine":11,"endColumn":22},{"ruleId":"101","severity":1,"message":"119","line":14,"column":12,"nodeType":"103","messageId":"104","endLine":14,"endColumn":22},{"ruleId":"101","severity":1,"message":"120","line":14,"column":24,"nodeType":"103","messageId":"104","endLine":14,"endColumn":32},{"ruleId":"121","severity":1,"message":"122","line":73,"column":43,"nodeType":"123","endLine":73,"endColumn":61},{"ruleId":"101","severity":1,"message":"124","line":20,"column":10,"nodeType":"103","messageId":"104","endLine":20,"endColumn":24},{"ruleId":"101","severity":1,"message":"108","line":1,"column":27,"nodeType":"103","messageId":"104","endLine":1,"endColumn":36},{"ruleId":"101","severity":1,"message":"125","line":47,"column":21,"nodeType":"103","messageId":"104","endLine":47,"endColumn":31},{"ruleId":"101","severity":1,"message":"126","line":48,"column":18,"nodeType":"103","messageId":"104","endLine":48,"endColumn":25},{"ruleId":"101","severity":1,"message":"127","line":70,"column":11,"nodeType":"103","messageId":"104","endLine":70,"endColumn":29},{"ruleId":"101","severity":1,"message":"128","line":4,"column":18,"nodeType":"103","messageId":"104","endLine":4,"endColumn":28},{"ruleId":"101","severity":1,"message":"105","line":5,"column":8,"nodeType":"103","messageId":"104","endLine":5,"endColumn":17},{"ruleId":"101","severity":1,"message":"106","line":6,"column":10,"nodeType":"103","messageId":"104","endLine":6,"endColumn":21},{"ruleId":"101","severity":1,"message":"107","line":6,"column":23,"nodeType":"103","messageId":"104","endLine":6,"endColumn":34},{"ruleId":"101","severity":1,"message":"129","line":30,"column":12,"nodeType":"103","messageId":"104","endLine":30,"endColumn":20},{"ruleId":"101","severity":1,"message":"130","line":30,"column":22,"nodeType":"103","messageId":"104","endLine":30,"endColumn":33},{"ruleId":"101","severity":1,"message":"131","line":31,"column":12,"nodeType":"103","messageId":"104","endLine":31,"endColumn":23},{"ruleId":"101","severity":1,"message":"132","line":31,"column":25,"nodeType":"103","messageId":"104","endLine":31,"endColumn":39},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'selecUser' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'useEffect' is defined but never used.","'Suspense' is defined but never used.","'useHistory' is defined but never used.","'useParams' is defined but never used.","'loginUser' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'userReducer' is assigned a value but never used.","'checkLogin' is assigned a value but never used.","'setCheck' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useAuthContext' is defined but never used.","'setLoading' is assigned a value but never used.","'setUser' is assigned a value but never used.","'handleOpenListRoom' is assigned a value but never used.","'RouterLink' is defined but never used.","'playerId' is assigned a value but never used.","'setPlayerId' is assigned a value but never used.","'openProfile' is assigned a value but never used.","'setOpenProfile' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]